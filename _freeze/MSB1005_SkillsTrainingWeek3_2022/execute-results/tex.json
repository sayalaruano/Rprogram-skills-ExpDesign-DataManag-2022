{
  "hash": "76a8e1cd950ed54eaf26d9fae3fc8b51",
  "result": {
    "markdown": "---\ntitle: \"Week3 - Introduction to Gene expression analysis part 1\"\nauthor: \"Sebastian Ayala-Ruano\"\ndate: today\noutput: html_document\n---\n\n\n\nThis R script serves as a scaffold for adding the code required to fulfill the assignments. It includes the assignments as well as a few hints.\n\nAdd the necessary code and type your answers in this document for your own record.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import libraries\nlibrary(ggplot2)\nlibrary(biomaRt)\nlibrary(pcaMethods)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(reshape2)\nlibrary(conflicted)\nlibrary(tidyr)\nlibrary(purrr)\n```\n:::\n\n\n\n## Assignment 1: Importing the data and inspecting sample information\n\nAfter unzipping the required transcriptomics (gene expression) file and sample information file, import both files as two separate objects. First set the active working directory to the folder containing the files.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load data\ngxData <- read_delim(\"Data/MAGNET_GeneExpressionData_CPM_19112020.txt\", delim =\"\\t\")\nsampleInfo <- read_csv(\"Data/MAGNET_SampleData_18112022.csv\")\n\n# Add gene ID as the row names\ngxData <- column_to_rownames(gxData, var = \"EnsemblGeneID\")\n\n# Add sample name as the row names\nsampleInfo <- column_to_rownames(sampleInfo, var = \"sample_name\")\n```\n:::\n\n\n\n### Using the sampleInfo object, answer the following questions: What does DCM, HCM and PPCM stand for? (hint: Google)\n\n* **DCM:** Dilated cardiomyopathy\n* **HCM:** Hypertrophic cardiomyopathy\n* **PPCM:** Postpartum cardiomyopathy\n\n### How many co-variates are there? What do they mean? What type of value does each contain? (e.g. binary, continuous, categorical)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of covariates\nn_co_variates = ncol(sampleInfo)\n\n# Types of variables of covariates\nstr(sampleInfo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t366 obs. of  19 variables:\n $ tissue_source: chr  \"NF\" \"NF\" \"NF\" \"NF\" ...\n $ etiology     : chr  \"NF\" \"NF\" \"NF\" \"NF\" ...\n $ gender       : chr  \"Male\" \"Male\" \"Male\" \"Female\" ...\n $ race         : chr  \"AA\" \"AA\" \"AA\" \"AA\" ...\n $ age          : num  18 26 17 59 59 50 15 53 62 16 ...\n $ weight       : num  70 85 68 66 87 87 70 91 56 67 ...\n $ height       : num  175 183 173 157 157 175 183 165 168 163 ...\n $ hw           : num  NA NA 400 380 NA 640 NA NA NA 256 ...\n $ lv_mass      : num  NA NA NA NA NA NA NA NA NA NA ...\n $ afib         : chr  \"No\" \"No\" \"No\" \"No\" ...\n $ VTVF         : chr  \"No\" \"No\" \"No\" \"No\" ...\n $ Diabetes     : chr  \"No\" \"No\" \"No\" \"No\" ...\n $ Hypertension : chr  \"No\" \"No\" \"No\" \"Yes\" ...\n $ LVEF         : num  0.37 NA 0.27 0.6 0.55 0.65 0.15 NA NA 0.51 ...\n $ RIN          : num  8.4 9.1 7.8 9.4 8.8 8.6 7.8 10 7.8 6.4 ...\n $ Library.Pool : chr  \"Magnet_10\" \"Magnet_11\" \"Magnet_09\" \"Magnet_06\" ...\n $ disease_race : chr  \"AA_NF\" \"AA_NF\" \"AA_NF\" \"AA_NF\" ...\n $ minexpr      : num  7.47 7.47 7.47 7.47 7.47 ...\n $ TIN.median.  : num  72.8 74.3 77.4 69.5 73.6 ...\n```\n:::\n:::\n\n\n\nThe number of co-variates is **19**.\n\nCovariates are variables known to affect disease susceptibility and are independent of tested genotypes at the population level. They are used to control for confounding factors in the analysis of the association between a disease and a genetic variant.\n\n### Are all variables measured in all individuals?\n\nNo, there are NA values in some columns, which means that these values were not measured.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna_values <- sampleInfo %>%\n  dplyr::select(everything()) %>% \n  summarise_all(list(~ sum(is.na(.))))\n\nna_values\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  tissue_source etiology gender race age weight height hw lv_mass afib VTVF\n1             0        0      0    0   0      0      1  7     207    5    2\n  Diabetes Hypertension LVEF RIN Library.Pool disease_race minexpr TIN.median.\n1        2            1   80   6            0            0       0           0\n```\n:::\n:::\n\n\n\n### Using the sampleInfo object, create an overview of the sample sizes and characteristics in each disease category: How many individuals are healthy? How many suffer from DCM, HCM, PPCM?\n\n**Method 1**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\netiology1 <- sampleInfo %>%\n  dplyr::select(etiology) %>% \n  table()\netiology1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\netiology\n DCM  HCM   NF PPCM \n 166   28  166    6 \n```\n:::\n:::\n\n\n\n**Method 2**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\netiology2 <- sampleInfo %>%\n  count(etiology)\n\netiology2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  etiology   n\n1      DCM 166\n2      HCM  28\n3       NF 166\n4     PPCM   6\n```\n:::\n:::\n\n\n\n**Method 3**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\netiology3 <- sampleInfo %>%\n  group_by(etiology) %>% \n  tally()\n\netiology3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 2\n  etiology     n\n  <chr>    <int>\n1 DCM        166\n2 HCM         28\n3 NF         166\n4 PPCM         6\n```\n:::\n:::\n\n\n\n### What is the average age in each disease category?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_etiology_by_age <- sampleInfo %>%\n  group_by(etiology) %>%\n  summarise(\n    n = n(),\n    age = mean(age, na.rm = TRUE)\n  )\n\navg_etiology_by_age\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 3\n  etiology     n   age\n  <chr>    <int> <dbl>\n1 DCM        166  52.1\n2 HCM         28  48.7\n3 NF         166  55.9\n4 PPCM         6  34.7\n```\n:::\n:::\n\n\n\n### How many male and female individuals are there in each disease category?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_etiology_by_gender <- sampleInfo %>%\n  group_by(etiology) %>%\n  count(gender)\n\ncount_etiology_by_gender\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 x 3\n# Groups:   etiology [4]\n  etiology gender     n\n  <chr>    <chr>  <int>\n1 DCM      Female    66\n2 DCM      Male     100\n3 HCM      Female    11\n4 HCM      Male      17\n5 NF       Female    89\n6 NF       Male      77\n7 PPCM     Female     6\n```\n:::\n:::\n\n\n\n### Are there other characteristics that are strikingly different between groups?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(sampleInfo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n tissue_source        etiology            gender              race          \n Length:366         Length:366         Length:366         Length:366        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n      age            weight           height            hw       \n Min.   :15.00   Min.   : 27.00   Min.   : 55.0   Min.   :151.0  \n 1st Qu.:48.00   1st Qu.: 66.00   1st Qu.:163.0   1st Qu.:371.5  \n Median :55.00   Median : 78.00   Median :170.0   Median :448.0  \n Mean   :53.28   Mean   : 81.19   Mean   :168.7   Mean   :468.8  \n 3rd Qu.:62.00   3rd Qu.: 91.00   3rd Qu.:178.0   3rd Qu.:556.5  \n Max.   :83.00   Max.   :267.00   Max.   :196.0   Max.   :923.0  \n                                  NA's   :1       NA's   :7      \n    lv_mass          afib               VTVF             Diabetes        \n Min.   :104.0   Length:366         Length:366         Length:366        \n 1st Qu.:195.0   Class :character   Class :character   Class :character  \n Median :247.0   Mode  :character   Mode  :character   Mode  :character  \n Mean   :266.0                                                           \n 3rd Qu.:321.5                                                           \n Max.   :613.0                                                           \n NA's   :207                                                             \n Hypertension            LVEF             RIN         Library.Pool      \n Length:366         Min.   :0.0500   Min.   : 5.800   Length:366        \n Class :character   1st Qu.:0.1500   1st Qu.: 8.100   Class :character  \n Mode  :character   Median :0.2000   Median : 8.500   Mode  :character  \n                    Mean   :0.3068   Mean   : 8.451                     \n                    3rd Qu.:0.5200   3rd Qu.: 8.900                     \n                    Max.   :0.8000   Max.   :10.000                     \n                    NA's   :80       NA's   :6                          \n disease_race          minexpr       TIN.median.   \n Length:366         Min.   :7.469   Min.   :23.38  \n Class :character   1st Qu.:7.469   1st Qu.:61.26  \n Mode  :character   Median :7.469   Median :70.12  \n                    Mean   :7.469   Mean   :65.03  \n                    3rd Qu.:7.469   3rd Qu.:73.32  \n                    Max.   :7.469   Max.   :81.52  \n                                                   \n```\n:::\n:::\n\n\n\nAn example of two features that are different between groups:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sampleInfo, aes(x= LVEF, y = lv_mass, color = etiology)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-11-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## Assignment 2: Data exploration on the sample level\n\n### The gene expression dataset contains so-called log2-transformed CPM (counts per million) values: How are CPM values created from raw RNA-sequencing count data? And why is this needed? (HINT: Google \"what the fpkm\")\n\nFPKM stands for fragments per kilobase of exon per million mapped fragments. It is used specifically in paired-end RNA-seq experiments. \nThe interpretation of FPKM is that if you sequence your RNA sample again, you expect to see for gene i, FPKMi reads divided by gene i \nlength over a thousand and divided by the total number of reads mapped over a million.\n\n### Create and interpret 4 figures containing boxplots for all samples in the dataset, one for DCM, one figure for HCM, one for PPCM and one for the healthy controls.\n\nCreate dataframes with information of the samples in each disease category.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a vector of the names of etiologies\nnames_et <- etiology2$etiology\n\n# Get the names of the samples per etiology\nfor (i in names_et){\n    # Define the name of the dataframes with the list of samples per etiology\n    var_name <- paste(i,\"columns\",sep = \"_\")\n    # Get the dataframes with the list of sample names per etiology\n    df <- rownames_to_column(sampleInfo, var = \"sample\") %>% \n              dplyr::filter(etiology == i) %>% \n              dplyr::select(sample) %>% \n              pull(sample)\n    # Assign the names to the dataframes\n    assign(var_name, df)\n}\n```\n:::\n\n\n\n#### Boxplot of NF patients\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNF_data <- gxData %>%\n           dplyr::select(NF_columns)\n\nNF_data_group <- gather(NF_data) # melt also works, but it is deprecated\n\nggplot(NF_data_group, aes(x = key, y = value)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Boxplot of DCM patients\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDCM_data <- gxData %>% \n           dplyr::select(DCM_columns)\n\nDCM_data_group <- gather(DCM_data) # melt also works, but it is deprecated\n\nggplot(DCM_data_group, aes(x = key, y = value)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Boxplot of HCM patients\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCM_data <- gxData %>% \n           dplyr::select(HCM_columns)\n\nHCM_data_group <- gather(HCM_data) # melt also works, but it is deprecated\n\nggplot(HCM_data_group, aes(x = key, y = value)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-15-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Boxplot of PPCM patients\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPPCM_data <- gxData %>% \n           dplyr::select(PPCM_columns)\n\nPPCM_data_group <- gather(PPCM_data) # melt also works, but it is deprecated\n\nggplot(PPCM_data_group, aes(x = key, y = value)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n### Create and interpret 4 figures containing density plots for all samples in the dataset, one figure for DCM, one for HCM, one for PPCM and one for the healthy controls.\n\n#### Density plot of all the values from the NF group colored by sample\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(NF_data_group, aes(x = value, color = key)) +\n  geom_density(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-17-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Density plot of all the values from the NF group \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(NF_data_group, aes(x = value)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-18-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nThe same code applies for the pther groups\n\n### Assess the normality of all samples and summarize the results in a table or figure. (HINT: try 'shapiro.test')\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get random sample for all the samples\nnorm_df <- sample_n(gxData, 5000) %>%\n  #slice(gxData, 5000:8000) %>% \n  sapply(., shapiro.test) %>% \n  as_tibble() %>% \n  slice(2) %>% \n  gather(sample, p_value) %>%\n  mutate(normality = p_value < 0.05) \n\nnorm_df %>% \n  count(normality)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 x 2\n  normality     n\n  <lgl>     <int>\n1 TRUE        366\n```\n:::\n:::\n\n\n\n### Perform a principal component analysis (PCA), visualize the results and color by the disease category, sex and other variables of interest. Interpret the results: what patterns do you see?\nHINT: use the functions 'pca' and 'plotPcs' from the package 'pcaMethods'\n\n#### Calculate the PCAs \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transpose dataframe to merge with the metadata\nt_gxData <- t(gxData)\n\n# Calculate pca\npca_hf <- pca(t_gxData, method = \"svd\")\n```\n:::\n\n\n\n#### Summary and barplot of the number of instances in the PCAs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a short summary on the calculated model\nsummary(pca_hf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsvd calculated PCA\nImportance of component(s):\n                 PC1     PC2\nR2            0.2726 0.07351\nCumulative R2 0.2726 0.34612\n```\n:::\n\n```{.r .cell-code}\nplot(pca_hf)\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-21-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Merge pca scores with metadata for plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merge pca scores with metadata\ndf_hf <- merge(scores(pca_hf), sampleInfo, by = 0)\n```\n:::\n\n\n\n\n#### Plot the PCAs with the default them of plotsPcs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Create scatteplot of the PCA with ggplot version 2\nplotPcs(pca_hf)\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-23-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n#### Plot the PCAs with ggplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Create scatteplor of the PCA with ggplot version 1\nggplot(df_hf, aes(PC1, PC2, shape=gender, color=etiology)) +\n  geom_point() +\n  xlab(paste(\"PC1\", pca_hf@R2[1] * 100, \"% of the variance\")) +\n  ylab(paste(\"PC2\", pca_hf@R2[2] * 100, \"% of the variance\"))\n```\n\n::: {.cell-output-display}\n![](MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf/unnamed-chunk-24-1.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "MSB1005_SkillsTrainingWeek3_2022_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}